"function _extractBreedGroup(traitType, value) {\n    var isBreedGroup = traitType.toLowerCase().trim() == 'breed';\n    if (isBreedGroup) {\n        return {\n            traitType: traitType,\n            value: value,\n            group: 'breed',\n            extracted: value.trim()\n        }\n    } else {\n        return null\n    }\n}\n\nfunction _extractPetGroup(traitType, value) {\n    var isPetGroup = traitType.toLowerCase().trim() == 'pet';\n    if (isPetGroup) {\n        return {\n            traitType: traitType,\n            value: value,\n            group: 'pet',\n            extracted: value.trim()\n        }\n    } else {\n        return null\n    }\n}\n\nfunction _extractBackgroundGroup(traitType, value) {\n    var isBackgroundGroup = traitType.toLowerCase().trim() == 'background';\n    if (isBackgroundGroup) {\n        return {\n            traitType: traitType,\n            value: value,\n            group: 'background',\n            extracted: value.trim()\n        }\n    } else {\n        return null\n    }\n}\n\nfunction _extractIsGroup(traitType, value) {\n    var tokens = value.trim().split(' ');\n    var matching_the_target_pattern = tokens.length == 2 && tokens[0] == 'is';\n    if (matching_the_target_pattern) {\n        return {\n            traitType: traitType,\n            value: value,\n            group: 'is',\n            extracted: tokens[tokens.length - 1].trim()\n        }\n    } else {\n        return null\n    }\n}\n\nfunction _extractWithGroup(traitType, value) {\n    return {\n        traitType: traitType,\n        value: value,\n        group: 'with',\n        extracted: value.trim().replace('wears', '').replace('wearing', '').replace('is wearing', '').replace('has', '').replace('Wears', '').replace('Wearing', '').replace('Is Wearing', '').replace('Has', '')\n    }\n}\n\nfunction _extract(trait_arg) {\n    var handlers = [_extractBreedGroup, _extractBackgroundGroup, _extractPetGroup, _extractIsGroup, _extractWithGroup];\n    for (let i = 0; i < handlers.length; i++) {\n        var obj = handlers[i](trait_arg.traitType, trait_arg.value);\n        if (obj != null) {\n            return obj\n        }\n    }\n}\n\nfunction _makeGroups(traits_identified) {\n    return traits_identified.reduce((accumulator, currentItem) => {\n        const g = currentItem.group;\n        if (!accumulator[g]) {\n            accumulator[g] = []\n        }\n        accumulator[g].push(currentItem);\n        return accumulator\n    }, {})\n}\n\nfunction _joinWithCommasAndAnd(values) {\n    if (values.length === 0) {\n        return ''\n    } else if (values.length === 1) {\n        return values[0]\n    } else {\n        const last = values.pop();\n        const joined = values.join(', ');\n        return `${joined},and ${last}`\n    }\n}\n\nfunction _formatGroup(groups, groupName) {\n    if (!groups.hasOwnProperty(groupName)) {\n        return ''\n    }\n    return _joinWithCommasAndAnd(groups[groupName].map(x => x.extracted))\n}\n\nfunction createPrompt(config, trait_args) {\n    prompt = config.prefix;\n    var traits_identified = trait_args.map(_extract);\n    var groups = _makeGroups(traits_identified);\n    var groupBreed = _formatGroup(groups, 'breed');\n    var groupIs = _formatGroup(groups, 'is');\n    var groupWith = _formatGroup(groups, 'with');\n    if (groupBreed != '') {\n        prompt = prompt.replace(/image of a [\\w\\s]*[Cc]at/, 'image of a ' + groupBreed + ' cat')\n    }\n    if (groupIs != '' && groupWith != '') {\n        prompt = prompt + ' that is ' + groupIs + ' and with ' + groupWith + '.'\n    } else if (groupIs != '') {\n        prompt = prompt + ' that is ' + groupIs + '.'\n    } else if (groupWith != '') {\n        prompt = prompt + ' with ' + groupWith + '.'\n    } else {\n        prompt = prompt + '.'\n    }\n    var groupPet = _formatGroup(groups, 'pet');\n    if (groupPet != '') {\n        prompt = prompt + ' It is accompanied by a pet ' + groupPet + '.'\n    }\n    var groupBackground = _formatGroup(groups, 'background');\n    if (groupBackground != '') {\n        prompt = prompt + ' The image has a ' + groupBackground + ' background.'\n    } else {\n        ' The image has a solid background.'\n    }\n    return prompt\n}"